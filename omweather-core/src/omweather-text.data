    list.insert( pair<std::string,std::string>("AM Clouds / PM Sun", _("AM Clouds / PM Sun")) );
    list.insert( pair<std::string,std::string>("AM Drizzle / Wind", _("AM Drizzle / Wind")) );
    list.insert( pair<std::string,std::string>("AM Drizzle", _("AM Drizzle")) );    
    list.insert( pair<std::string,std::string>("AM Fog / PM Clouds", _("AM Fog / PM Clouds")) );
    list.insert( pair<std::string,std::string>("AM Fog / PM Sun", _("AM Fog / PM Sun")) );
    list.insert( pair<std::string,std::string>("AM Light Rain / Wind", _("AM Light Rain / Wind")) );
    list.insert( pair<std::string,std::string>("AM Light Rain", _("AM Light Rain")) );
    list.insert( pair<std::string,std::string>("AM Light Snow", _("AM Light Snow")) );
    list.insert( pair<std::string,std::string>("AM Light Wintry Mix", _("AM Light Wintry Mix")) );
    list.insert( pair<std::string,std::string>("AM Rain / Snow Showers / Wind", _("AM Rain / Snow Showers / Wind")) );  
    list.insert( pair<std::string,std::string>("AM Rain / Snow Showers", _("AM Rain / Snow Showers")) );
    list.insert( pair<std::string,std::string>("AM Rain / Snow", _("AM Rain / Snow")) );
    list.insert( pair<std::string,std::string>("AM Rain / Wind", _("AM Rain / Wind")) );    
    list.insert( pair<std::string,std::string>("AM Rain", _("AM Rain")) );
    list.insert( pair<std::string,std::string>("AM Showers / Wind", _("AM Showers / Wind")) );
    list.insert( pair<std::string,std::string>("AM Showers", _("AM Showers")) );
    list.insert( pair<std::string,std::string>("AM Snow Showers", _("AM Snow Showers")) );
    list.insert( pair<std::string,std::string>("AM Snow", _("AM Snow")) );
    list.insert( pair<std::string,std::string>("Blowing Snow", _("Blowing Snow")) );    
    list.insert( pair<std::string,std::string>("CALM", _("CALM")) );
    list.insert( pair<std::string,std::string>("Clear / Wind", _("Clear / Wind")) );
    list.insert( pair<std::string,std::string>("Clear", _("Clear")) );
    list.insert( pair<std::string,std::string>("Clouds Early / Clearing Late", _("Clouds Early / Clearing Late")) );
    list.insert( pair<std::string,std::string>("Cloudy / Wind", _("Cloudy / Wind")) );
    list.insert( pair<std::string,std::string>("Cloudy Few Snow", _("Cloudy Few Snow")) );
    list.insert( pair<std::string,std::string>("Cloudy Light Rain", _("Cloudy Light Rain")) );
    list.insert( pair<std::string,std::string>("Cloudy T-Storm", _("Cloudy T-Storm")) );
    list.insert( pair<std::string,std::string>("Cloudy and Windy", _("Cloudy and Windy")) );
    list.insert( pair<std::string,std::string>("Cloudy", _("Cloudy")) );
    list.insert( pair<std::string,std::string>("Drifting Snow", _("Drifting Snow")) );
    list.insert( pair<std::string,std::string>("Drizzle / Fog", _("Drizzle / Fog")) );
    list.insert( pair<std::string,std::string>("Drizzle Late", _("Drizzle Late")) );    
    list.insert( pair<std::string,std::string>("Drizzle", _("Drizzle")) );
    list.insert( pair<std::string,std::string>("E", _("E")) );
    list.insert( pair<std::string,std::string>("ENE", _("ENE")) );
    list.insert( pair<std::string,std::string>("ENE_short", _("ENE_short")) );
    list.insert( pair<std::string,std::string>("ESE", _("ESE")) );
    list.insert( pair<std::string,std::string>("ESE_short", _("ESE_short")) );
    list.insert( pair<std::string,std::string>("E_short", _("E_short")) );
    list.insert( pair<std::string,std::string>("Extreme", _("Extreme")) );
    list.insert( pair<std::string,std::string>("Fair", _("Fair")) );
    list.insert( pair<std::string,std::string>("Few Showers / Wind", _("Few Showers / Wind")) );
    list.insert( pair<std::string,std::string>("Few Showers", _("Few Showers")) );
    list.insert( pair<std::string,std::string>("Few Snow Showers / Wind", _("Few Snow Showers / Wind")) );    
    list.insert( pair<std::string,std::string>("Few Snow Showers", _("Few Snow Showers")) );
    list.insert( pair<std::string,std::string>("Few Snow", _("Few Snow")) );
    list.insert( pair<std::string,std::string>("First Quarter", _("First Quarter")) );
    list.insert( pair<std::string,std::string>("Fog Early / Clouds Late", _("Fog Early / Clouds Late")) );
    list.insert( pair<std::string,std::string>("Fog Late", _("Fog Late")) );
    list.insert( pair<std::string,std::string>("Fog early / Clearing late", _("Fog early / Clearing late")) );
    list.insert( pair<std::string,std::string>("Fog", _("Fog")) );
    list.insert( pair<std::string,std::string>("Foggy", _("Foggy")) );
    list.insert( pair<std::string,std::string>("Freezing Drizzle", _("Freezing Drizzle")) );
    list.insert( pair<std::string,std::string>("Full", _("Full")) );
    list.insert( pair<std::string,std::string>("Haze", _("Haze")) );
    list.insert( pair<std::string,std::string>("Heavy Rain / Wind", _("Heavy Rain / Wind")) );
    list.insert( pair<std::string,std::string>("Heavy Rain", _("Heavy Rain")) );
    list.insert( pair<std::string,std::string>("Heavy Snow", _("Heavy Snow")) );
    list.insert( pair<std::string,std::string>("High", _("High")) );
    list.insert( pair<std::string,std::string>("Isolated T-Storms / Wind", _("Isolated T-Storms / Wind")) );
    list.insert( pair<std::string,std::string>("Isolated T-Storms", _("Isolated T-Storms")) );
    list.insert( pair<std::string,std::string>("Last Quarter", _("Last Quarter")) );
    list.insert( pair<std::string,std::string>("Lawn and Garden Weather", _("Lawn and Garden Weather")) );
    list.insert( pair<std::string,std::string>("Light Drizzle", _("Light Drizzle")) );
    list.insert( pair<std::string,std::string>("Light Freezing Rain", _("Light Freezing Rain")) );
    list.insert( pair<std::string,std::string>("Light Rain / Fog", _("Light Rain / Fog")) );    
    list.insert( pair<std::string,std::string>("Light Rain / Wind Late", _("Light Rain / Wind Late")) );    
    list.insert( pair<std::string,std::string>("Light Rain / Wind", _("Light Rain / Wind")) );
    list.insert( pair<std::string,std::string>("Light Rain Early", _("Light Rain Early")) );
    list.insert( pair<std::string,std::string>("Light Rain Late", _("Light Rain Late")) );
    list.insert( pair<std::string,std::string>("Light Rain Shower", _("Light Rain Shower")) );    
    list.insert( pair<std::string,std::string>("Light Rain and Freezing Rain", _("Light Rain and Freezing Rain")) );    
    list.insert( pair<std::string,std::string>("Light Rain and Shower", _("Light Rain and Shower")) );
    list.insert( pair<std::string,std::string>("Light Rain and Windy", _("Light Rain and Windy")) );
    list.insert( pair<std::string,std::string>("Light Rain with Thunder", _("Light Rain with Thunder")) );    
    list.insert( pair<std::string,std::string>("Light Rain", _("Light Rain")) );
    list.insert( pair<std::string,std::string>("Light Snow / Fog", _("Light Snow / Fog")) );
    list.insert( pair<std::string,std::string>("Light Snow / Wind", _("Light Snow / Wind")) );
    list.insert( pair<std::string,std::string>("Light Snow Early", _("Light Snow Early")) );
    list.insert( pair<std::string,std::string>("Light Snow Late", _("Light Snow Late")) );
    list.insert( pair<std::string,std::string>("Light Snow Shower", _("Light Snow Shower")) );
    list.insert( pair<std::string,std::string>("Light Snow", _("Light Snow")) );
    list.insert( pair<std::string,std::string>("Local Pollen Reports", _("Local Pollen Reports")) );
    list.insert( pair<std::string,std::string>("Low", _("Low")) );
    list.insert( pair<std::string,std::string>("Mist", _("Mist")) );
    list.insert( pair<std::string,std::string>("Mostly Clear", _("Mostly Clear")) );
    list.insert( pair<std::string,std::string>("Mostly Cloudy  and  Windy", _("Mostly Cloudy and Windy")) );
    list.insert( pair<std::string,std::string>("Mostly Cloudy / Wind", _("Mostly Cloudy / Wind")) );
    list.insert( pair<std::string,std::string>("Mostly Cloudy Few Snow", _("Mostly Cloudy Few Snow")) );
    list.insert( pair<std::string,std::string>("Mostly Cloudy Light Rain", _("Mostly Cloudy Light Rain")) );
    list.insert( pair<std::string,std::string>("Mostly Cloudy Rain", _("Mostly Cloudy Rain")) );
    list.insert( pair<std::string,std::string>("Mostly Cloudy T-Storm", _("Mostly Cloudy T-Storm")) );
    list.insert( pair<std::string,std::string>("Mostly Cloudy", _("Mostly Cloudy")) );
    list.insert( pair<std::string,std::string>("Mostly Sunny", _("Mostly Sunny")) );
    list.insert( pair<std::string,std::string>("N", _("N")) );
    list.insert( pair<std::string,std::string>("N/A", _("N/A")) );
    list.insert( pair<std::string,std::string>("NE", _("NE")) );
    list.insert( pair<std::string,std::string>("NE_short", _("NE_short")) );
    list.insert( pair<std::string,std::string>("NNE", _("NNE")) );
    list.insert( pair<std::string,std::string>("NNE_short", _("NNE_short")) );
    list.insert( pair<std::string,std::string>("NNW", _("NNW")) );
    list.insert( pair<std::string,std::string>("NNW_short", _("NNW_short")) );
    list.insert( pair<std::string,std::string>("NO STATION", _("NO STATION")) );
    list.insert( pair<std::string,std::string>("NW", _("NW")) );
    list.insert( pair<std::string,std::string>("NW_short", _("NW_short")) );
    list.insert( pair<std::string,std::string>("N_short", _("N_short")) );
    list.insert( pair<std::string,std::string>("New", _("New")) );
    list.insert( pair<std::string,std::string>("Overcast", _("Overcast")) );
    list.insert( pair<std::string,std::string>("PM Fog", _("PM Fog")) );
    list.insert( pair<std::string,std::string>("PM Light Rain / Wind", _("PM Light Rain / Wind")) );
    list.insert( pair<std::string,std::string>("PM Light Rain", _("PM Light Rain")) );
    list.insert( pair<std::string,std::string>("PM Light Snow / Wind", _("PM Light Snow / Wind")) );
    list.insert( pair<std::string,std::string>("PM Light Snow", _("PM Light Snow")) );
    list.insert( pair<std::string,std::string>("PM Rain / Snow", _("PM Rain / Snow")) );
    list.insert( pair<std::string,std::string>("PM Rain / Wind", _("PM Rain / Wind")) );
    list.insert( pair<std::string,std::string>("PM Rain", _("PM Rain")) );
    list.insert( pair<std::string,std::string>("PM Showers / Wind", _("PM Showers / Wind")) );
    list.insert( pair<std::string,std::string>("PM Showers", _("PM Showers")) );
    list.insert( pair<std::string,std::string>("PM Snow Showers", _("PM Snow Showers")) );
    list.insert( pair<std::string,std::string>("PM T-Storms", _("PM T-Storms")) );
    list.insert( pair<std::string,std::string>("Partly Cloudy / Wind", _("Partly Cloudy / Wind")) );
    list.insert( pair<std::string,std::string>("Partly Cloudy Light Rain", _("Partly Cloudy Light Rain")) );
    list.insert( pair<std::string,std::string>("Partly Cloudy T-Storm", _("Partly Cloudy T-Storm")) );
    list.insert( pair<std::string,std::string>("Partly Cloudy and Windy", _("Partly Cloudy and Windy")) );
    list.insert( pair<std::string,std::string>("Partly Cloudy", _("Partly Cloudy")) );
    list.insert( pair<std::string,std::string>("Rain / Freezing Rain", _("Rain / Freezing Rain")) );
    list.insert( pair<std::string,std::string>("Rain / Snow / Wind", _("Rain / Snow / Wind")) );
    list.insert( pair<std::string,std::string>("Rain / Snow Early", _("Rain / Snow Early")) );
    list.insert( pair<std::string,std::string>("Rain / Snow Late", _("Rain / Snow Late")) );
    list.insert( pair<std::string,std::string>("Rain / Snow Showers / Wind", _("Rain / Snow Showers / Wind")) );
    list.insert( pair<std::string,std::string>("Rain / Snow Showers Late", _("Rain / Snow Showers Late")) );
    list.insert( pair<std::string,std::string>("Rain / Snow Showers", _("Rain / Snow Showers")) );
    list.insert( pair<std::string,std::string>("Rain / Snow", _("Rain / Snow")) );
    list.insert( pair<std::string,std::string>("Rain / Thunder", _("Rain / Thunder")) );    
    list.insert( pair<std::string,std::string>("Rain / Wind Early", _("Rain / Wind Early")) );
    list.insert( pair<std::string,std::string>("Rain / Wind", _("Rain / Wind")) );
    list.insert( pair<std::string,std::string>("Rain Early", _("Rain Early")) );
    list.insert( pair<std::string,std::string>("Rain Late", _("Rain Late")) );
    list.insert( pair<std::string,std::string>("Rain Shower and Windy", _("Rain Shower and Windy")) );
    list.insert( pair<std::string,std::string>("Rain Shower", _("Rain Shower")) );
    list.insert( pair<std::string,std::string>("Rain and Snow", _("Rain and Snow")) );
    list.insert( pair<std::string,std::string>("Rain to Wintry Mix / Wind", _("Rain to Wintry Mix / Wind")) );
    list.insert( pair<std::string,std::string>("Rain to Wintry Mix", _("Rain to Wintry Mix")) );
    list.insert( pair<std::string,std::string>("Rain", _("Rain")) );
    list.insert( pair<std::string,std::string>("Rush Hour Traffic", _("Rush Hour Traffic")) );
    list.insert( pair<std::string,std::string>("S", _("S")) );
    list.insert( pair<std::string,std::string>("SE", _("SE")) );
    list.insert( pair<std::string,std::string>("SE_short", _("SE_short")) );
    list.insert( pair<std::string,std::string>("SSE", _("SSE")) );
    list.insert( pair<std::string,std::string>("SSE_short", _("SSE_short")) );
    list.insert( pair<std::string,std::string>("SSW", _("SSW")) );
    list.insert( pair<std::string,std::string>("SSW_short", _("SSW_short")) );
    list.insert( pair<std::string,std::string>("SW", _("SW")) );
    list.insert( pair<std::string,std::string>("SW_short", _("SW_short")) );
    list.insert( pair<std::string,std::string>("S_short", _("S_short")) );
    list.insert( pair<std::string,std::string>("Scattered Showers", _("Scattered Showers")) );
    list.insert( pair<std::string,std::string>("Scattered Snow Showers", _("Scattered Snow Showers")) );
    list.insert( pair<std::string,std::string>("Scattered Snow", _("Scattered Snow")) );
    list.insert( pair<std::string,std::string>("Scattered T-Storms", _("Scattered T-Storms")) );
    list.insert( pair<std::string,std::string>("Showers / Wind Early", _("Showers / Wind Early")) );
    list.insert( pair<std::string,std::string>("Showers / Wind", _("Showers / Wind")) );
    list.insert( pair<std::string,std::string>("Showers Early", _("Showers Early")) );
    list.insert( pair<std::string,std::string>("Showers Late", _("Showers Late")) );
    list.insert( pair<std::string,std::string>("Showers in the Vicinity", _("Showers in the Vicinity")) );
    list.insert( pair<std::string,std::string>("Showers", _("Showers")) );
    list.insert( pair<std::string,std::string>("Smoke", _("Smoke")) );
    list.insert( pair<std::string,std::string>("Snow / Wind", _("Snow / Wind")) );
    list.insert( pair<std::string,std::string>("Snow Shower / Wind", _("Snow Shower / Wind")) );
    list.insert( pair<std::string,std::string>("Snow Shower", _("Snow Shower")) );
    list.insert( pair<std::string,std::string>("Snow Showers / Wind Early", _("Snow Showers / Wind Early")) );
    list.insert( pair<std::string,std::string>("Snow Showers Early", _("Snow Showers Early")) );
    list.insert( pair<std::string,std::string>("Snow Showers Late", _("Snow Showers Late")) );
    list.insert( pair<std::string,std::string>("Snow and Freezing Rain", _("Snow and Freezing Rain")) );
    list.insert( pair<std::string,std::string>("Snow to Rain", _("Snow to Rain")) );
    list.insert( pair<std::string,std::string>("Snow to Wintry Mix / Wind", _("Snow to Wintry Mix / Wind")) );
    list.insert( pair<std::string,std::string>("Snow to Wintry Mix", _("Snow to Wintry Mix")) );
    list.insert( pair<std::string,std::string>("Snow", _("Snow")) );
    list.insert( pair<std::string,std::string>("Storm", _("Storm")) );
    list.insert( pair<std::string,std::string>("Sunny / Wind", _("Sunny / Wind")) );
    list.insert( pair<std::string,std::string>("Sunny", _("Sunny")) );
    list.insert( pair<std::string,std::string>("T-Showers", _("T-Showers")) );
    list.insert( pair<std::string,std::string>("T-Storms Early", _("T-Storms Early")) );
    list.insert( pair<std::string,std::string>("T-Storms", _("T-Storms")) );
    list.insert( pair<std::string,std::string>("Thunder", _("Thunder")) );
    list.insert( pair<std::string,std::string>("Unlimited", _("Unlimited")) );
    list.insert( pair<std::string,std::string>("VAR", _("VAR")) );
    list.insert( pair<std::string,std::string>("Very High", _("Very High")) );
    list.insert( pair<std::string,std::string>("W", _("W")) );
    list.insert( pair<std::string,std::string>("WNW", _("WNW")) );
    list.insert( pair<std::string,std::string>("WNW_short", _("WNW_short")) );
    list.insert( pair<std::string,std::string>("WSW", _("WSW")) );
    list.insert( pair<std::string,std::string>("WSW_short", _("WSW_short")) );
    list.insert( pair<std::string,std::string>("W_short", _("W_short")) );
    list.insert( pair<std::string,std::string>("Waning Crescent", _("Waning Crescent")) );
    list.insert( pair<std::string,std::string>("Waning Gibbous", _("Waning Gibbous")) );
    list.insert( pair<std::string,std::string>("Waxing Crescent", _("Waxing Crescent")) );
    list.insert( pair<std::string,std::string>("Waxing Gibbous", _("Waxing Gibbous")) );
    list.insert( pair<std::string,std::string>("Wind", _("Wind")) );
    list.insert( pair<std::string,std::string>("Wintry Mix / Wind Early", _("Wintry Mix / Wind Early")) );
    list.insert( pair<std::string,std::string>("Wintry Mix / Wind", _("Wintry Mix / Wind")) );
    list.insert( pair<std::string,std::string>("Wintry Mix to Snow", _("Wintry Mix to Snow")) );
    list.insert( pair<std::string,std::string>("Wintry Mix", _("Wintry Mix")) );
    list.insert( pair<std::string,std::string>("falling", _("falling")) );
    list.insert( pair<std::string,std::string>("km/h", _("km/h")) );
    list.insert( pair<std::string,std::string>("km/s", _("km/s")) );
    list.insert( pair<std::string,std::string>("m/h", _("m/h")) );
    list.insert( pair<std::string,std::string>("m/s", _("m/s")) );
    list.insert( pair<std::string,std::string>("mi/h", _("mi/h")) );
    list.insert( pair<std::string,std::string>("mi/s", _("mi/s")) );
    list.insert( pair<std::string,std::string>("rising", _("rising")) );
    list.insert( pair<std::string,std::string>("steady", _("steady")) );
    list.insert( pair<std::string,std::string>("В", _("В")) );
    list.insert( pair<std::string,std::string>("З", _("З")) );
    list.insert( pair<std::string,std::string>("С", _("С")) );
    list.insert( pair<std::string,std::string>("С-В", _("С-В")) );
    list.insert( pair<std::string,std::string>("С-З", _("С-З")) );
    list.insert( pair<std::string,std::string>("Ю", _("Ю")) );
    list.insert( pair<std::string,std::string>("Ю-В", _("Ю-В")) );
    list.insert( pair<std::string,std::string>("Ю-З", _("Ю-З")) );
