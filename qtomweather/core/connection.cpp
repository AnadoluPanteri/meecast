#include "connection.h"
////////////////////////////////////////////////////////////////////////////////
namespace Core {
////////////////////////////////////////////////////////////////////////////////
    Connection::Connection(long timeout){
        _proxyHost = new std::string;
        _proxyPort = -1;
        _hasProxy = false;
        _connected = false;
        _timeout = timeout;
    }
////////////////////////////////////////////////////////////////////////////////
    Connection::~Connection(){
        delete _proxyHost;
    }
////////////////////////////////////////////////////////////////////////////////
    void Connection::wakeup(){
    }
////////////////////////////////////////////////////////////////////////////////
    bool Connection::connected() const{
        return _connected;
    }
////////////////////////////////////////////////////////////////////////////////
    void Connection::close(){
    }
////////////////////////////////////////////////////////////////////////////////
    bool Connection::hasProxy() const{
        return _hasProxy;
    }
////////////////////////////////////////////////////////////////////////////////
    std::string& Connection::proxyHost() const{
        return *_proxyHost;
    }
////////////////////////////////////////////////////////////////////////////////
    int Connection::proxyPort() const{
        return _proxyPort;
    }
////////////////////////////////////////////////////////////////////////////////
    long Connection::timeout() const{
        return _timeout;
    }
////////////////////////////////////////////////////////////////////////////////
} // namespace Core
