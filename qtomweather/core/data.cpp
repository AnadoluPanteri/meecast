#include "data.h"
////////////////////////////////////////////////////////////////////////////////
namespace Core {
////////////////////////////////////////////////////////////////////////////////
    Data::Data(){
        _windDirection = new std::string;
    }
////////////////////////////////////////////////////////////////////////////////
    void
    Data::StartTime(time_t start_time){
        Data::_start_time = start_time;
    }
////////////////////////////////////////////////////////////////////////////////
    void
    Data::EndTime(time_t end_time){
        Data::_end_time = end_time;
    }
////////////////////////////////////////////////////////////////////////////////
    void
    Data::Temperature(float temperat){
        Data::_temperature = temperat;
    }
////////////////////////////////////////////////////////////////////////////////
    float
    Data::Temperature(){
        /* need to check type (Celsius Farenheit ) */
        return Data::_temperature;
    }
////////////////////////////////////////////////////////////////////////////////
     void
     Data::Flike(float flike){
          Data::_flike = flike;
     }
////////////////////////////////////////////////////////////////////////////////
     float
     Data::Flike(){
         /* need to check type (Celsius Farenheit ) */
         return Data::_flike;
     }
////////////////////////////////////////////////////////////////////////////////
     void
     Data::WindSpeed(float windspeed){
         Data::_windSpeed = windspeed;
     }
////////////////////////////////////////////////////////////////////////////////
     float
     Data::WindSpeed(){
         /* need to check type (Celsius Farenheit ) */
         return Data::_windSpeed;
     }
////////////////////////////////////////////////////////////////////////////////
     void
     Data::WindDirection(std::string *text){
         delete Data::_windDirection;
         Data::_windDirection = text;
     }
////////////////////////////////////////////////////////////////////////////////
     std::string&
     Data::WindDirection(){
         /* need to check type (Celsius Farenheit ) */
         return *_windDirection;
     }
////////////////////////////////////////////////////////////////////////////////
    time_t
    Data::GetTimeDistance(time_t need_time){
        if (Data::_end_time > need_time && Data::_start_time < need_time)
            return (Data::_end_time  - Data::_start_time);
        else
            return -1;
    }
////////////////////////////////////////////////////////////////////////////////
    Data::~Data(){
       delete _windDirection;
    }
////////////////////////////////////////////////////////////////////////////////
} // namespace Core
